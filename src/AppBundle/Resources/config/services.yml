services:
    app.form.type.login_type:
        class: AppBundle\Form\Type\LoginType
        arguments:
            - @translator.default
        tags:
            - { name: form.type, alias: app_login }

    app.form.type.user_type:
        class: AppBundle\Form\Type\UserType
        arguments:
            - @translator.default
        tags:
            - { name: form.type, alias: app_user }

    app.form.type.project_member:
        class: AppBundle\Form\Type\ProjectMemberType
        tags:
            - { name: form.type, alias: app_project_member }

    app.form.type.project:
        class: AppBundle\Form\Type\ProjectType
        arguments:
            - @translator.default
        tags:
            - { name: form.type, alias: app_project }

    app.form.type.issue:
        class: AppBundle\Form\Type\IssueType
        arguments:
            - @translator.default
        tags:
            - { name: form.type, alias: app_issue }

    app.form.type.comment:
        class: AppBundle\Form\Type\CommentType
        arguments:
            - @translator.default
        tags:
            - { name: form.type, alias: app_comment }

    app.menu_builder:
        class: AppBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory", "@translator.default", "@security.authorization_checker"]

    app.main_menu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: app.menu_builder
        factory_method: createMainMenu
        arguments:
            - @app.main_menu_manager
        tags:
            - { name: knp_menu.menu, alias: main } # The alias is what is used to retrieve the menu

    app.logout_menu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: app.menu_builder
        factory_method: createLogoutMenu
        arguments: ["@request_stack"]
        tags:
            - { name: knp_menu.menu, alias: logout } # The alias is what is used to retrieve the menu

    app.twig.abtract_extension:
        class:      AppBundle\Twig\AbstractExtension
        abstract: true
        public: false
        arguments:
            - @translator.default

    app.security.access.role_voter:
        class:      AppBundle\Security\Authorization\Voter\AbstractRoleVoter
        abstract: true
        public:     false
        arguments:
            - @security.role_hierarchy

    app.security.access.supported_role_voter:
        class:      AppBundle\Security\Authorization\Voter\AbstractSupportedRoleVoter
        parent: app.security.access.role_voter

    app.security.access.user_voter:
        class:      AppBundle\Security\Authorization\Voter\UserVoter
        parent: app.security.access.role_voter
        tags:
           - { name: security.voter }

    app.security.access.issue_voter:
        class:      AppBundle\Security\Authorization\Voter\IssueVoter
        parent: app.security.access.role_voter
        tags:
           - { name: security.voter }

    app.security.access.project_voter:
        class:      AppBundle\Security\Authorization\Voter\ProjectVoter
        parent: app.security.access.role_voter
        tags:
           - { name: security.voter }

    app.security.access.comment_voter:
        class:      AppBundle\Security\Authorization\Voter\CommentVoter
        parent: app.security.access.role_voter
        tags:
           - { name: security.voter }

    app.security.access.issues_role_voter:
       class:      AppBundle\Security\Authorization\Voter\IssuesRoleVoter
       parent: app.security.access.supported_role_voter
       tags:
           - { name: security.voter }

    app.security.access.users_role_voter:
       class:      AppBundle\Security\Authorization\Voter\UsersRoleVoter
       parent: app.security.access.supported_role_voter
       tags:
           - { name: security.voter }

    app.security.access.projects_role_voter:
       class:      AppBundle\Security\Authorization\Voter\ProjectsRoleVoter
       parent: app.security.access.supported_role_voter
       tags:
           - { name: security.voter }

    app.security.access.profile_role_voter:
       class:      AppBundle\Security\Authorization\Voter\ProfileRoleVoter
       parent: app.security.access.supported_role_voter
       tags:
           - { name: security.voter }

    app.services.user:
        class: AppBundle\Service\UserService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @translator.default
            - @knp_paginator

    app.services.user_form:
        class: AppBundle\Service\UserFormService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @translator.default
            - @form.factory

    app.services.project:
        class: AppBundle\Service\ProjectService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @knp_paginator
            - @translator.default

    app.services.issue:
        class: AppBundle\Service\IssueService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @knp_paginator
            - @translator.default

    app.services.project_forms:
        class: AppBundle\Service\ProjectFormsService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @translator.default
            - @form.factory

    app.services.issue_form:
        class: AppBundle\Service\IssueFormService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @translator.default
            - @form.factory
        calls:
            - [setEventDispatcher, ["@event_dispatcher"]]

    app.services.comment:
        class: AppBundle\Service\CommentService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @translator.default
            - @form.factory
        calls:
            - [setEventDispatcher, ["@event_dispatcher"]]

    app.services.user_password_service:
        class: AppBundle\Service\UserPasswordService
        arguments:
            - @security.password_encoder
            - @hackzilla.password_generator.computer
        calls:
            - [setEventDispatcher, ["@event_dispatcher"]]

    app.services.mail_service:
        class: AppBundle\Service\MailService
        arguments:
            - @translator.default
            - @mailer
            - @templating
            - "%app.mail.default_email%"

    app.twig.subscriber:
      class: AppBundle\EventListener\KernelRequestSubscriber
      arguments: [@twig, @security.token_storage]
      tags:
          - { name: kernel.event_listener, event: kernel.request }

    app.create_user_event.listener:
      class: AppBundle\EventListener\CreateUserEventListener
      arguments: [@app.services.mail_service]
      tags:
          - { name: kernel.event_listener, event: app.create_user_event }

    app.issue_activity.listener:
      class: AppBundle\EventListener\IssueActivityListener
      arguments: [@app.services.mail_service]
      tags:
          - { name: kernel.event_listener, event: app.issue_activity }

    app.twig.user_extension:
        class: AppBundle\Twig\UserExtension
        parent: app.twig.abtract_extension
        arguments:
            - @translator.default
        tags:
            - { name: twig.extension }

    app.twig.activity_extension:
        class: AppBundle\Twig\ActivityExtension
        parent: app.twig.abtract_extension
        arguments:
            - @translator.default
        tags:
            - { name: twig.extension }

    app.twig.issue_extension:
        class: AppBundle\Twig\IssueExtension
        parent: app.twig.abtract_extension
        arguments:
            - @translator.default
        tags:
            - { name: twig.extension }

